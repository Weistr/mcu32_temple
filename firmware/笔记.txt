


1.时钟配置方法（外部晶振）

  原理：mcu的startup.s中会先调用systeminit再调用main,时钟初始化是在systeminit中进行的
  1.进入system_gd32xxx.h,修改HXTAL_VALUE为外部晶振的值，官方默认8m
  2.进入system_gd32xxx.c,选择系统时钟频率和模式，取消注释即可
  #if defined (GD32F350)
//#define __SYSTEM_CLOCK_8M_HXTAL              (__HXTAL)
//#define __SYSTEM_CLOCK_8M_IRC8M              (__IRC8M)
//#define __SYSTEM_CLOCK_72M_PLL_HXTAL         (uint32_t)(72000000)
//#define __SYSTEM_CLOCK_72M_PLL_IRC8M_DIV2    (uint32_t)(72000000)
//#define __SYSTEM_CLOCK_84M_PLL_HXTAL         (uint32_t)(84000000)
//#define __SYSTEM_CLOCK_84M_PLL_IRC8M_DIV2    (uint32_t)(84000000)
//#define __SYSTEM_CLOCK_96M_PLL_HXTAL         (uint32_t)(96000000)
//#define __SYSTEM_CLOCK_96M_PLL_IRC8M_DIV2      (uint32_t)(96000000)
//#define __SYSTEM_CLOCK_96M_PLL_IRC48M_DIV2     (uint32_t)(96000000)
#define __SYSTEM_CLOCK_108M_PLL_HXTAL        (uint32_t)(108000000)
//#define __SYSTEM_CLOCK_108M_PLL_IRC8M_DIV2   (uint32_t)(108000000)
  3.不同宏定义意味着使用不同的函数，接下来修改对应函数来使时钟为自己想要的，上述会调用static void system_clock_108m_hxtal(void)
  接下来修改该函数，
  4.PLL = HXTAL /2 * 27 = 108 MHz。其中由于官方HXTAL为8M该等式成立。现在为12M则对应倍频值为18。修改完成



2.项目宏定义
  项目宏定义在.vscode里c_cpp_properties里。与keil中的宏定义一样，进行确认芯片型号等操作

3.FPU与dsp
  增加全局宏：__TARGET_FPU_VFP(keil,或者用的armcc，才有用)
  由于用到GCC所以不需要全局宏，在gcc后面加指令即可-mfloat-abi=hard -mfpu=vfpv4-d16

4.cmake
新建build文件夹，在该文件夹中执行cmake -G "MinGw MakeFiles" ..